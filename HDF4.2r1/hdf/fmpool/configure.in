##############################################################################
## This file was taken from the Cygnus Toolkit distribution and used as
## as a template. This is called by the top level Cygnus Configure.

## This file is a Bourne shell script fragment that supplies the information
## necessary to tailor a template configure script into the configure
## script appropriate for this directory.  For more information, check
## any existing configure script.  

## Be warned, there are two types of configure.in files.  There are those
## used by Autoconf, which are macros which are expanded into a configure
## script by autoconf.  The other sort, of which this is one, is executed
## by Cygnus configure.  

## For more information on these two systems, check out the documentation
## for 'Autoconf' (autoconf.texi) and 'Configure' (configure.texi) or
## the official documentation on these packages.    

##############################################################################

################################################################################

srctrigger=fmpool.h
srcname="FMPOOL library"

# This gets set non-empty for some net releases of packages.
appdirs=""

# per-host:

# Work in distributions for each host makefile fragment
host_makefile_frag=""
if [ -d ${srcdir}/config ]; then
case "${host}" in
  alpha-*-*)              host_makefile_frag=config/mh-alpha ;;
  mips*-dec-ultrix*)      host_makefile_frag=config/mh-decstation ;;
  mips*-sgi-irix6.*)      host_makefile_frag=config/mh-irix6 ;;
  mips*-sgi-irix6_32*)    host_makefile_frag=config/mh-irix32 ;;
  mips*-sgi-irix5*)       host_makefile_frag=config/mh-irix5 ;;
  mips*-sgi-irix4*)       host_makefile_frag=config/mh-irix4 ;;
  i[3456]86-*-linux*)     host_makefile_frag=config/mh-linux ;;
  i[3456]86-*-freebsd*)   host_makefile_frag=config/mh-fbsd ;;
  ia64-*-*)               host_makefile_frag=config/mh-ia64 ;;
  *-ibm-aix*)             host_makefile_frag=config/mh-aix ;;
  *-*-solaris2*)          host_makefile_frag=config/mh-solaris ;;
  *-sun-*)		          host_makefile_frag=config/mh-sun ;;
  *-hp-hpux*)             host_makefile_frag=config/mh-hpux ;;
  *-convex-bsd*)          host_makefile_frag=config/mh-convex ;;
  *-cray-unicos*)         host_makefile_frag=config/mh-unicos ;;
  t3*-cray-craympp)       host_makefile_frag=config/mh-t3e ;;
  S370*)                  host_makefile_frag=config/mh-fujivp ;;
  *-mac-*)		          host_makefile_frag=config/mh-mac ;;
esac
fi

# Check for valid platfroms before we continue
if [ "${host_makefile_frag}" = "" ] ; then
    echo '***' "The HDF/netCDF version of the FMPOOL library is not supported on host ${host}" 1>&2
    echo '***' "Please read the HDF installation docs" 1>&2
    exit 1
fi

# make sure makefile fragment is there
if [ ! -f ${srcdir}/${host_makefile_frag} ]; then
    echo '***' "We are missing makefile fragment ${host_makefile_frag}" 1>&2
    echo '***' "Please read the installation docs" 1>&2
    exit 1
fi


# The Solaris /usr/ucb/cc compiler does not appear to work.
case "${host}" in
  sparc-sun-solaris2*)
      if [ "`/usr/bin/which ${CC-cc}`" = "/usr/ucb/cc" ] ; then
          could_use=
          [ -d /opt/SUNWspro/bin ] && could_use="/opt/SUNWspro/bin"
          if [ -d /opt/cygnus/bin ] ; then
              if [ "$could_use" == "" ] ; then
                  could_use="/opt/cygnus/bin"
              else
                  could_use="$could_use or /opt/cygnus/bin"
              fi
          fi
        if [ "$could_use" = "" ] ; then
            echo "Warning: compilation may fail because you're using"
            echo "/usr/ucb/cc.  You should change your PATH or CC "
            echo "variable and rerun configure."
        else
            echo "Warning: compilation may fail because you're using"
            echo "/usr/ucb/cc, when you should use the C compiler from"
            echo "$could_use.  You should change your"
            echo "PATH or CC variable and rerun configure."
        fi
      fi
  ;;
esac

# per-target:

#
# get proper 'fmpconf.h' i.e link the correct pre-generated file
files=
links=fmpconf.h
if [ -d ${srcdir}/config ]; then
case "${host}" in
  alpha-*-*)              files=config/fmpalpha.h ;;
  mips*-dec-ultrix*)      files=config/fmpdec.h ;;
  mips*-sgi-irix6.*)      files=config/fmpirix6.h ;;
  mips*-sgi-irix6_32*)    files=config/fmpirix32.h ;;
  mips*-sgi-irix5*)       files=config/fmpirix5.h ;;
  mips*-sgi-irix4*)       files=config/fmpirix4.h ;;
  i[3456]86-*-linux*)     files=config/fmplinux.h ;;
  i[3456]86-*-freebsd*)   files=config/fmpfbsd.h ;;
  ia64-*-*)               files=config/fmpia64.h ;;
  *-ibm-aix*)             files=config/fmpaix.h ;;
  *-*-solaris2*)          files=config/fmpsolaris.h ;;
  *-sun-*)		          files=config/fmpsun.h ;;
  *-hp-hpux*)             files=config/fmphpux.h ;;
  *-convex-bsd*)          files=config/fmpconvex.h ;;
  *-cray-unicos*)         files=config/fmpunicos.h ;;
  t3*-cray-craympp)       files=config/fmpt3e.h ;;
  S370*)                  files=config/fmpfujivp.h ;;
  *-mac-*)		          files=config/fmpmac.h ;;
esac
fi

# make sure host specific 'fmconf.h' is there
if [ ! -f ${srcdir}/${files} ]; then
    echo '***' "We are missing host specific ${files}" 1>&2
    echo '***' "Please read the installation docs" 1>&2
    exit 1
fi

# Decided to copy files instead of using symbolic links.
#
# Now for Mac and PC configurations we want to copy and not use symbolic
# links. You can use this also for any platfrom you want.
if [ -d ${srcdir}/config ]; then
case "${host}" in
  *-mac-*)             symbolic_link="cp -p" ;;
  *-win-*)             symbolic_link="cp -p" ;;
  *)                   symbolic_link="cp" ;;
esac
fi

# post-target:

# We don't have anything

#
# Local Variables:
# fill-column: 131
# End:
#
